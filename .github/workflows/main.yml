name: main.yml

on:
  pull_request:
    types: [ opened, reopened, assigned ]
    branches: [ main ]
  push:
#     branches-ignore:
#       - 'main'
#     types: [created]
    branches: 
      - 'feature'
    paths:
      - 'src/App.js'
    
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        
    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: npm install
      
    - name: Build
      run: npm run build

#     - name: Deploy
#       uses: reggionick/s3-deploy@v3
#       with:
#         folder: build
#         bucket: ${{ secrets.S3_BUCKET }}
#         bucket-region: ${{ secrets.S3_BUCKET_REGION }}
#         TARGET: s3://resultscx-poc-s3-deployment/folder1/
#         dist-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
#         invalidation: /
#         delete-removed: true
#         no-cache: true
#         private: true
    
    - uses: jwalton/gh-find-current-pr@v1
      id: findPr
      with:
#       Can be "open", "closed", or "all".  Defaults to "open".
          state: open
#       This will echo "Your PR is 7", or be skipped if there is no current PR.
    - run: echo "Your PR is ${PR}"
      if: success() && steps.findPr.outputs.number
      env:
        PR: ${{ steps.findPr.outputs.number }}    
        
    - id: step1
      run: echo "::set-output name=test::trial-fe-pr-${{ steps.findPr.outputs.number }}-env.react-frontend-s3.indium-poc.co.in" 
      
    - uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'ap-south-1'   
        SOURCE_DIR: 'build'  
        DEST_DIR: ${{ steps.findPr.outputs.number }}

    - run: |
        aws cloudfront create-distribution --origin-domain-name resultscx-poc-s3-deployment-dynamic-url.s3.ap-south-1.amazonaws.com --default-root-object index.html > create_distribution.json
        sudo apt-get install jq
        export ETAG=`cat create_distribution.json | jq '.ETag' | tr -d \"`
        export DISTRIBUTION_ID=`cat create_distribution.json | jq '.Distribution.Id' | tr -d \"`
        export DOMAIN_NAME=`cat create_distribution.json | jq '.Distribution.DomainName' | tr -d \"`
        export ORIGIN_ID=`cat create_distribution.json | jq '.Distribution.DistributionConfig.Origins.Items.Id' | tr -d \"`
        export ORIGIN_PATH=`cat create_distribution.json | jq '.Distribution.DistributionConfig.Origins.Items.OriginPath' | tr -d \"`
        echo "$ETAG, $DISTRIBUTION_ID, $DOMAIN_NAME, $ORIGIN_ID, $ORIGIN_PATH"
        
#     - name: Create a cloudfront Distribution	
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: 'ap-south-1'
        
    - name: "Create an A record set"
      uses: Roosterfish/aws-route53-record-set-action@master
      with: 
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_route53_hosted_zone_id: ${{ secrets.AWS_ROUTE53_HOSTED_ZONE_ID }}
        aws_route53_rr_action: "UPSERT"
        aws_route53_rr_name: ${{ steps.step1.outputs.test }}
        aws_route53_rr_type: "CNAME"
        aws_route53_rr_ttl: "300"
        aws_route53_rr_value: "d3razlz7qyp68m.cloudfront.net"
