name: main.yml

on:
  pull_request:
    types: [ opened, reopened, assigned ]
    
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        
    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: npm install
      
    - name: Build
      run: npm run build

    #- name: Deploy
      #uses: reggionick/s3-deploy@v3
      #with:
        #folder: build
        #bucket: ${{ secrets.S3_BUCKET }}
        #bucket-region: ${{ secrets.S3_BUCKET_REGION }}
        #TARGET: s3://resultscx-poc-s3-deployment/folder1/
        #dist-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        #invalidation: /
        #delete-removed: true
        #no-cache: true
        #private: true
        
    - name: Sync to S3
      uses: raulanatol/aws-s3-docker-action@master
      env:
        AWS_BUCKET_NAME: ${{ secrets.S3_BUCKET }}
        #SOURCE: 
        TARGET: s3://resultscx-poc-s3-deployment/folder1/
        WITH_DELETE: --delete 
        WITH_CLOUD_FRONT_INVALIDATION: /
        AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        #AWS_CLOUDFRONT_INVALIDATION_PATH: /name: main.yml

on:
  pull_request:
    types: [ opened, reopened, assigned ]
    
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        
    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: npm install
      
    - name: Build
      run: npm run build

    #- name: Deploy
      #uses: reggionick/s3-deploy@v3
      #with:
        #folder: build
        #bucket: ${{ secrets.S3_BUCKET }}
        #bucket-region: ${{ secrets.S3_BUCKET_REGION }}
        #TARGET: s3://resultscx-poc-s3-deployment/folder1/
        #dist-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        #invalidation: /
        #delete-removed: true
        #no-cache: true
        #private: true
        
    - name: Sync to S3
      uses: raulanatol/aws-s3-docker-action@master
      env:
        AWS_BUCKET_NAME: ${{ secrets.S3_BUCKET }}
        #SOURCE: 
        TARGET: s3://resultscx-poc-s3-deployment/folder1/
        WITH_DELETE: --delete 
        WITH_CLOUD_FRONT_INVALIDATION: /
        AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        #AWS_CLOUDFRONT_INVALIDATION_PATH: /
